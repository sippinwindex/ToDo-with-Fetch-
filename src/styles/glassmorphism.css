/* === Base Variables === */
/* === Base Variables === */
:root {
    /* ... (keep existing variables) ... */
    --blur-amount: 10px;
    --border-radius-main: 18px;
    /* ... etc ... */

    /* NEW: Gradient for contrasted text */
    --text-gradient-contrast: linear-gradient(90deg, #f8ffae, #43c6ac, #f7cac9, #ffdde1); /* Example: Brighter, different colors */
    --text-gradient-size: 300%;
}

/* ... (keep existing resets, body, animations, panel styles) ... */


/* === Headings === */

/* REMOVE or comment out the old h1.animated-gradient styles if no longer used elsewhere */
/*
h1.animated-gradient {
    ... old styles ...
}
*/

/* NEW: Contrasted Animated Gradient Text */
.animated-gradient-text-contrast {
    font-size: 2.8rem; /* Slightly larger */
    font-weight: 700;
    margin-bottom: 2rem;
    text-align: center;

    /* Apply the new contrast gradient */
    background: var(--text-gradient-contrast);
    background-size: var(--text-gradient-size) var(--text-gradient-size);

    /* Crucial for gradient text effect */
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent; /* Fallback for browsers not supporting background-clip */

    /* Animation for the gradient */
    animation: gradient-text-flow 12s ease infinite;

    /* Add text shadow for better separation from background */
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3), 0 0 1px rgba(0, 0, 0, 0.2);

    /* Optional: Add a very subtle stroke */
    /* -webkit-text-stroke: 0.5px rgba(0, 0, 0, 0.2); */
}

/* Keyframes for the new text gradient animation */
@keyframes gradient-text-flow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}


/* ... (keep existing header, input, button, body, item, footer styles) ... */

/* Ensure Todo Item text color is set (likely already white/accent) */
.todo-item {
    /* ... existing styles ... */
    color: var(--text-color-accent); /* White text for items */
}

/* Ensure completed style uses muted color */
.todo-item span.completed {
    color: var(--text-color-muted); /* Muted color for completed text */
    opacity: 0.7; /* Dim completed text slightly */
    /* ... keep ::before/::after checkbox styles ... */
    text-decoration: none;
}
.todo-item span.completed::before {
    background: var(--primary-gradient);
    background-size: 150% 150%;
    border-color: transparent;
}
.todo-item span.completed::after {
     opacity: 1;
     transform: translateY(-60%) rotate(45deg) scale(1);
}

:root {
    --blur-amount: 10px;
    --border-radius-main: 18px;
    --border-radius-item: 10px;
    --transition-speed: 0.3s;

    /* Glass & Colors */
    --glass-bg: rgba(255, 255, 255, 0.1);
    --glass-bg-light: rgba(255, 255, 255, 0.2);
    --glass-border-color: rgba(255, 255, 255, 0.25);
    --glass-highlight-border: rgba(255, 255, 255, 0.4); /* For top/left borders */

    /* Background Gradient */
    --primary-gradient: linear-gradient(135deg, #ff6b6b, #4ecdc4, #45b7d1, #a06bff); /* Added purple */
    --gradient-size: 400%;

    /* Text */
    --text-color: #00008b; /* Dark Blue Text Color */
    --text-color-muted: #454545; /* Muted Gray Text Color */
    --text-color-accent: #ffffff; /* White Text Color */
    --delete-color: #ff7b7b;
    --delete-color-hover: #ff4d4d;

    /* Shadows */
    --shadow-light: 0 4px 15px rgba(0, 0, 0, 0.1);
    --shadow-medium: 0 8px 30px rgba(0, 0, 0, 0.15);
    --shadow-heavy: 0 12px 40px rgba(0, 0, 0, 0.2);

    /* Font */
    --font-family: 'Poppins', sans-serif;
}

/* === Global Reset & Base === */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
}

body {
    min-height: 100vh;
    background: var(--primary-gradient);
    background-size: var(--gradient-size) var(--gradient-size);
    animation: gradient-bg 18s ease infinite;
    font-family: var(--font-family);
    color: var(--text-color); /* Use the defined text color */
    line-height: 1.6;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding-top: 5vh;
}

/* === Animated Background === */
@keyframes gradient-bg {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* === Main Glass Panel (Todo Container) === */
.glass-panel {
    width: 100%;
    max-width: 600px;
    background: var(--glass-bg);
    backdrop-filter: blur(var(--blur-amount));
    -webkit-backdrop-filter: blur(var(--blur-amount));
    border-radius: var(--border-radius-main);
    border: 1px solid var(--glass-border-color);
    border-top-color: var(--glass-highlight-border);
    border-left-color: var(--glass-highlight-border);
    box-shadow: var(--shadow-medium);
    padding: 2rem 2.5rem;
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
}

/* === Headings === */
h1.animated-gradient {
    font-size: 2.6rem;
    font-weight: 700;
    margin-bottom: 2rem;
    text-align: center;
    background: var(--primary-gradient);
    background-size: var(--gradient-size) var(--gradient-size);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-text 10s ease infinite, gradient-bg 18s ease infinite;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

@keyframes gradient-text {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
}

/* === Todo Header (Input & Add Button) === */
.todo-header {
    display: flex;
    gap: 0.8rem;
    margin-bottom: 1.5rem;
}

.new-todo {
    flex-grow: 1;
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid var(--glass-border-color);
    border-radius: var(--border-radius-item);
    padding: 0.8rem 1.2rem;
    color: var(--text-color-accent); /* Use white text for input */
    font-size: 1rem;
    outline: none;
    transition: background var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
}

.new-todo::placeholder {
    color: var(--text-color-muted); /* Use muted color for placeholder */
    opacity: 0.7;
}

.new-todo:focus {
    background: var(--glass-bg-light);
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3);
    border-color: rgba(255, 255, 255, 0.4);
}

/* === General Button Styles === */
.btn {
    padding: 0.8rem 1.5rem;
    border-radius: var(--border-radius-item);
    border: 1px solid transparent;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all var(--transition-speed) ease;
    background: var(--glass-bg-light);
    backdrop-filter: blur(3px);
    -webkit-backdrop-filter: blur(3px);
    box-shadow: var(--shadow-light);
    color: var(--text-color); /* Base text color for buttons */
    flex-shrink: 0;
    text-align: center;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-medium);
    background: rgba(255, 255, 255, 0.3);
    color: var(--text-color-accent); /* White text on hover */
}

.btn:active {
    transform: translateY(-1px) scale(0.98);
    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.1);
    background: rgba(255, 255, 255, 0.15);
}

/* Primary Add Task Button */
.btn.add-task {
     background: var(--primary-gradient);
     background-size: 200% 200%;
     animation: gradient-bg 6s ease infinite alternate;
     color: white;
     border-color: rgba(255, 255, 255, 0.3);
}
.btn.add-task:hover {
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
      background-position: right center;
}


/* === Todo Body & Items === */
.todo-body {
    margin-top: 1rem;
    max-height: 50vh;
    overflow-y: auto;
    padding-right: 0.5rem; /* Ensure space for scrollbar doesn't cause content shift */

    /* Custom Scrollbar Styling */
    &::-webkit-scrollbar {
        width: 8px;
    }
    &::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 4px;
    }
    &::-webkit-scrollbar-thumb {
        background: var(--glass-bg-light);
        border-radius: 4px;
        border: 1px solid var(--glass-border-color);
    }
    &::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.3);
    }
}

.todo-item {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--border-radius-item);
    padding: 0.9rem 1.3rem;
    margin-bottom: 0.8rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border: 1px solid rgba(255, 255, 255, 0.1);
    /* Added opacity, max-height, padding, margin transitions for smooth removal */
    transition: background var(--transition-speed) ease,
                transform var(--transition-speed) ease,
                border-color var(--transition-speed) ease,
                box-shadow var(--transition-speed) ease,
                opacity 0.4s ease-out,         /* Controls fade out */
                max-height 0.4s ease-out,     /* Controls collapse */
                padding 0.4s ease-out,
                margin 0.4s ease-out;
    opacity: 1;
    max-height: 100px; /* Adjust if items can be taller */
    overflow: hidden; /* Crucial for max-height collapse animation */
    animation: itemFadeIn 0.4s ease forwards; /* Entry animation */
    color: var(--text-color-accent); /* Default text color for items (White) */
}

.todo-item:last-child {
    margin-bottom: 0;
}

.todo-item:hover {
    background: var(--glass-bg);
    transform: scale(1.02);
    border-color: var(--glass-border-color);
    box-shadow: var(--shadow-light);
}

/* Animation for adding item */
@keyframes itemFadeIn {
    from {
        opacity: 0;
        transform: translateX(-20px);
        max-height: 0; /* Start collapsed for entry */
    }
    to {
        opacity: 1;
        transform: translateX(0);
        max-height: 100px; /* Animate to full height */
    }
}

/* Optional: Style/Animation to apply via JS before removing item (if desired) */
/* The current JS removes element directly, relying on base transition */
.todo-item.exiting {
    animation: itemFadeOut 0.5s ease forwards;
}

/* Animation for removing item (used by .exiting class if applied) */
@keyframes itemFadeOut {
    from {
        opacity: 1;
        transform: scale(1);
        max-height: 100px;
    }
    to {
        opacity: 0;
        transform: scale(0.9) translateX(20px);
        max-height: 0;
        padding-top: 0;
        padding-bottom: 0;
        margin-bottom: 0;
        border-width: 0;
    }
}


/* Todo Item Text Span */
.todo-item span {
    flex-grow: 1;
    margin-right: 1rem;
    cursor: pointer;
    transition: color var(--transition-speed) ease, text-decoration var(--transition-speed) ease;
    position: relative;
    padding-left: 2rem; /* Space for custom checkbox */
    /* Ensure text color is inherited or set (already set on .todo-item) */
}

/* Custom Checkbox Styling */
.todo-item span::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 18px;
    height: 18px;
    border: 2px solid var(--glass-border-color);
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    transition: background var(--transition-speed) ease, border-color var(--transition-speed) ease;
}
/* Checkmark using pseudo-element */
.todo-item span::after {
    content: '';
    position: absolute;
    left: 6px;
    top: 50%;
    transform: translateY(-60%) rotate(45deg) scale(0); /* Start hidden */
    width: 5px;
    height: 10px;
    border: solid var(--text-color-accent); /* Checkmark color (White) */
    border-width: 0 2px 2px 0;
    opacity: 0;
    transition: transform 0.2s ease, opacity 0.2s ease;
}

/* Completed State Styling */
/* Targets the span when it has the 'completed' class */
.todo-item span.completed {
    color: var(--text-color-muted); /* Use muted color for completed text */
    text-decoration: none; /* Remove default line-through, handled by checkbox */
    opacity: 0.7; /* Slightly dim completed text */
}
.todo-item span.completed::before {
    background: var(--primary-gradient); /* Fill circle */
    background-size: 150% 150%; /* Ensure gradient covers */
    border-color: transparent; /* Hide border when filled */
}
.todo-item span.completed::after {
     opacity: 1; /* Show checkmark */
     transform: translateY(-60%) rotate(45deg) scale(1); /* Animate checkmark visible */
}

/* Delete Button within Todo Item */
/* Specific selector for the delete button inside a todo item */
.todo-item .delete-btn {
    /* Reset general .btn styles that aren't needed */
    background: none;
    border: none;
    box-shadow: none;
    backdrop-filter: none;
    padding: 0.2rem 0.5rem; /* Minimal padding */
    margin-right: -0.5rem; /* Align flush right */
    flex-shrink: 0; /* Prevent shrinking */

    /* Specific delete styles */
    color: var(--delete-color); /* Use delete color variable */
    font-size: 1.4rem;
    font-weight: bold;
    line-height: 1;
    cursor: pointer;
    opacity: 0.6; /* Dimmed until hover */
    transition: color var(--transition-speed) ease, transform var(--transition-speed) ease, opacity var(--transition-speed) ease;
}
.todo-item .delete-btn:hover {
    color: var(--delete-color-hover); /* Use hover color variable */
    transform: scale(1.25); /* Enlarge on hover */
    opacity: 1; /* Fully opaque on hover */
}


/* === Todo Footer === */
.todo-footer {
    padding-top: 1.5rem;
    margin-top: 1rem;
    border-top: 1px solid var(--glass-border-color);
    color: var(--text-color-muted); /* Muted text for footer info */
    font-size: 0.9rem;
}

.todo-footer .status-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding: 0 0.5rem;
}

.todo-footer .filter-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
}

/* Filter Button Specifics */
.todo-footer .filter-buttons .btn {
    padding: 0.4rem 1rem;
    font-size: 0.85rem;
    background: var(--glass-bg);
    box-shadow: none;
    color: var(--text-color-accent); /* White text for filter buttons */
}
.todo-footer .filter-buttons .btn:hover {
    background: var(--glass-bg-light);
    transform: translateY(-2px);
    box-shadow: var(--shadow-light);
    color: var(--text-color-accent); /* Keep white on hover */
}
.todo-footer .filter-buttons .btn.active {
    background: rgba(255, 255, 255, 0.3);
    color: var(--text-color-accent);
    font-weight: bold;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
    transform: translateY(-1px);
}

/* Clear Completed Button */
.todo-footer .clear-btn {
    color: var(--delete-color);
    background: none;
    border: none;
    font-weight: 600;
    cursor: pointer;
    padding: 0.2rem 0.5rem;
    transition: color var(--transition-speed) ease, text-shadow var(--transition-speed) ease;
    box-shadow: none;
    backdrop-filter: none;
    font-size: 0.9rem;
}
.todo-footer .clear-btn:hover {
    color: var(--delete-color-hover);
    text-shadow: 0 0 5px rgba(255, 123, 123, 0.5);
}


/* === Utility & Empty State === */
/* Styling for the message shown when the todo list is empty */
.empty-list-message {
    text-align: center;
    color: var(--text-color-accent); /* Use white text for better contrast on gradient */
    opacity: 0.8; /* Slightly transparent */
    padding: 2rem 0;
    font-style: italic;
    font-size: 1rem;
}